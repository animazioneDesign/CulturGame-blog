a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:roobert-regular;src:url(//db.onlinewebfonts.com/t/6228016f2b172c06410f3a2356d33f6c.eot);src:url(//db.onlinewebfonts.com/t/6228016f2b172c06410f3a2356d33f6c.eot#iefix) format("embedded-opentype"),url(//db.onlinewebfonts.com/t/6228016f2b172c06410f3a2356d33f6c.woff2) format("woff2")}@font-face{font-family:roobert-bold;src:url(../css/fonts/Roobert-Bold.woff2) format("woff2")}@font-face{font-family:roobert-medium;src:url(../css/fonts/Roobert-Medium.woff2) format("woff2")}body,html{font-style:"roobert-regular";font-display:auto}.big{font-size:10vw}@media (min-width:600px){.big{font-size:2.888888888888889rem}}.medium{font-size:1.444444444444444rem}.small{font-size:1.222222222222222rem;line-height:150%}.arrow{padding-bottom:10px}.main-title-container-article{display:flex;flex-direction:row;padding-left:4rem;padding-top:250px}.main-article{display:flex;flex-wrap:nowrap;flex-flow:nowrap;justify-content:space-between;border-bottom:2px solid #111;flex-direction:row;justify-items:start left self-start align-content left;gap:10px;margin:6rem}.main-article div.article-a{order:1;flex:0 1 auto;align-self:auto;min-width:400px;min-height:auto}.main-article div.article-b{order:2;flex:1 1 auto;align-self:auto;min-width:400px;min-height:10px}.main-article div.article-c{order:3;flex:0 1 auto;align-self:auto;min-width:400px;min-height:auto}.titolo-aggiuntivo{color:#111;font-size:1.888888888888889rem;letter-spacing:.07rem;padding-bottom:2rem;font-family:roobert-medium}.footer{background-color:grey}.banner{z-index:-4}.text{padding-left:4rem;max-width:70%}.line,.text{padding-top:5rem}.line{margin-right:2rem;margin-left:2rem;border-bottom:2px solid #111}.container{padding-left:2.2rem}.containers{padding-top:30px;z-index:-2}a:link{padding:1rem 0;line-height:24px;letter-spacing:.05em;font-family:roobert-regular}a:link,a:visited{color:#111}h1{color:#fff;font-size:50px;letter-spacing:.1rem;font-family:roobert-bold}h2{color:#fff}h2,h3{font-size:1.888888888888889rem;letter-spacing:.07rem;font-family:roobert-medium}h3,h5{color:#111}h5{padding:.5rem 0 0;font-size:1.222222222222222rem;letter-spacing:.07rem;font-family:roobert-medium}p{line-height:31px}.a,p{font-size:1.444444444444444rem;padding:1rem 0;letter-spacing:.05em;font-family:roobert-regular}.a{line-height:24px}.main-title-container{display:flex;flex-direction:row;padding-left:4rem;padding-top:340px}.main-title{flex:3 1 auto;order:1}.container{display:flex;flex-wrap:nowrap;flex-flow:nowrap;justify-content:space-between;border-bottom:2px solid #111;flex-direction:row;justify-items:start left self-start align-content left;gap:10px;margin:2rem}.container div.a{order:1;align-self:auto;min-width:400px;min-height:auto}.container div.b{order:2;min-width:auto;max-width:780px;min-height:auto;margin-bottom:10px}.container div.c{order:3;align-self:flex-start;align:right;min-width:400px;max-width:400px;min-height:auto;margin:0 0 30px 30px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

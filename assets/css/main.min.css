a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}body,html{font-family:roobert-regular;color:#111;font-display:auto}.big{font-size:10vw}@media (min-width:600px){.big{font-size:2.888888888888889rem}}.medium{font-size:1.444444444444444rem}.small{font-size:1.222222222222222rem;line-height:150%}body,html{overflow:hidden}.banner{z-index:-1;position:fixed;top:0}#containers{height:250px}a:link{color:#111;font-size:1.222222222222222rem}h1{font-size:2.888888888888889rem;font-family:roobert-black}h1,h2{color:#111;letter-spacing:.1rem}h2{font-size:1.888888888888889rem;font-family:roobert-SemiBold}p{padding:1rem 0 1rem 2rem;line-height:28px;letter-spacing:.07em}.container{display:flex;flex-flow:row nowrap;justify-content:center;align-content:center;align-items:center}.container div.a{order:1;background-color:#00f}.container div.a,.container div.b{flex:3 1 auto;align-self:auto;min-width:auto;min-height:auto}.container div.b{order:2;background-color:red}.container div.c{order:3;background-color:#00f;flex:3 1 auto;align-self:auto;min-width:auto;min-height:auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
